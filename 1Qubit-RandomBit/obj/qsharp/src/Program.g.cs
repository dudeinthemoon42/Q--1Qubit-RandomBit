//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum._1Qubit_RandomBit\",\"Name\":\"RandomBit\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/Bobby/Git/1Qubit-RandomBit/1Qubit-RandomBit/Program.qs\",\"Position\":{\"Item1\":6,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":20}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum._1Qubit_RandomBit\",\"Name\":\"RandomBit\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/Bobby/Git/1Qubit-RandomBit/1Qubit-RandomBit/Program.qs\",\"Position\":{\"Item1\":6,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":20}},\"Documentation\":[]}")]
#line hidden
namespace Quantum._1Qubit_RandomBit
{
    [SourceLocation("C:/Users/Bobby/Git/1Qubit-RandomBit/1Qubit-RandomBit/Program.qs", OperationFunctor.Body, 7, -1)]
    public partial class RandomBit : Operation<QVoid, QVoid>, ICallable
    {
        public RandomBit(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "RandomBit";
        String ICallable.FullName => "Quantum._1Qubit_RandomBit.RandomBit";
        protected Allocate Allocate
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicH
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> MicrosoftQuantumIntrinsicM
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> MicrosoftQuantumIntrinsicMessage
        {
            get;
            set;
        }

        protected Release Release
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> MicrosoftQuantumIntrinsicReset
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> Body => (__in__) =>
        {
#line hidden
            {
#line 8 "C:/Users/Bobby/Git/1Qubit-RandomBit/1Qubit-RandomBit/Program.qs"
                var q = Allocate.Apply();
#line hidden
                System.Runtime.ExceptionServices.ExceptionDispatchInfo __arg1__ = null;
                try
                {
#line 9 "C:/Users/Bobby/Git/1Qubit-RandomBit/1Qubit-RandomBit/Program.qs"
                    var iter = 1L;
#line 10 "C:/Users/Bobby/Git/1Qubit-RandomBit/1Qubit-RandomBit/Program.qs"
                    var maxIters = 20L;
#line 11 "C:/Users/Bobby/Git/1Qubit-RandomBit/1Qubit-RandomBit/Program.qs"
                    while (true)
                    {
#line 13 "C:/Users/Bobby/Git/1Qubit-RandomBit/1Qubit-RandomBit/Program.qs"
                        MicrosoftQuantumIntrinsicH.Apply(q);
#line 16 "C:/Users/Bobby/Git/1Qubit-RandomBit/1Qubit-RandomBit/Program.qs"
                        var bit = MicrosoftQuantumIntrinsicM.Apply(q);
#line 19 "C:/Users/Bobby/Git/1Qubit-RandomBit/1Qubit-RandomBit/Program.qs"
                        MicrosoftQuantumIntrinsicReset.Apply(q);
#line 21 "C:/Users/Bobby/Git/1Qubit-RandomBit/1Qubit-RandomBit/Program.qs"
                        MicrosoftQuantumIntrinsicMessage.Apply(String.Format("{0}", bit));
#line 23 "C:/Users/Bobby/Git/1Qubit-RandomBit/1Qubit-RandomBit/Program.qs"
                        iter = (iter + 1L);
                        if ((iter > maxIters))
                        {
                            break;
                        }
                        else
                        {
                        }
                    }
                }
#line hidden
                catch (Exception __arg2__)
                {
                    __arg1__ = System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(__arg2__);
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__ != null)
                    {
                        __arg1__.Throw();
                    }

#line hidden
                    Release.Apply(q);
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.Allocate = this.Factory.Get<Allocate>(typeof(Microsoft.Quantum.Intrinsic.Allocate));
            this.MicrosoftQuantumIntrinsicH = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.H));
            this.MicrosoftQuantumIntrinsicM = this.Factory.Get<ICallable<Qubit, Result>>(typeof(Microsoft.Quantum.Intrinsic.M));
            this.MicrosoftQuantumIntrinsicMessage = this.Factory.Get<ICallable<String, QVoid>>(typeof(Microsoft.Quantum.Intrinsic.Message));
            this.Release = this.Factory.Get<Release>(typeof(Microsoft.Quantum.Intrinsic.Release));
            this.MicrosoftQuantumIntrinsicReset = this.Factory.Get<ICallable<Qubit, QVoid>>(typeof(Microsoft.Quantum.Intrinsic.Reset));
        }

        public override IApplyData __dataIn(QVoid data) => data;
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<RandomBit, QVoid, QVoid>(QVoid.Instance);
        }
    }
}